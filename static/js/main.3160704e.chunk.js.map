{"version":3,"sources":["pages/LoginPage.js","pages/PredictPage.js","pages/LeaderboardPage.js","pages/HomePage.js","pages/AdminResultForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","username","setUsername","useState","code","setCode","error","setError","navigate","useNavigate","React","createElement","className","onSubmit","async","e","preventDefault","res","axios","post","localStorage","setItem","data","user","id","user_type","err","placeholder","value","onChange","target","required","type","PredictPage","matches","setMatches","selectedMatchId","setSelectedMatchId","firstInningsScore","setFirstInningsScore","matchWinner","setMatchWinner","mom","setMom","message","setMessage","teamOptions","setTeamOptions","playerOptions","setPlayerOptions","userId","getItem","useEffect","get","then","catch","console","user_id","match_id","predicted_first_innings_score","Number","predicted_match_winner","predicted_man_of_the_match","setTimeout","matchId","selectedMatch","find","m","team1","team2","params","players","map","key","Date","match_date","toDateString","team","player","LeaderboardPage","setData","leaderboard","renderTable","label","sorted","sort","a","b","row","index","addTotal","fis_points","mw_points","mom_points","onClick","role","aria-label","renderOverallTable","ranked","_objectSpread","total","i","HomePage","handleLogout","clear","AdminResultForm","score","setScore","winner","setWinner","style","padding","schedule_id","actual_first_innings_score","actual_match_winner","actual_mom","AppRoutes","Routes","Route","path","element","onLogin","handleLogin","App","Router","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3160704e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginPage.css';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [code, setCode] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/login', {\n        username,\n        code,\n      });\n      localStorage.setItem('user_id', res.data.user.id);\n      localStorage.setItem('username', res.data.user.username);\n      localStorage.setItem('user_type', res.data.user.user_type);\n      navigate('/home');\n    } catch (err) {\n      setError('Login failed. Please check your credentials.');\n    }\n  };\n\n  return (\n    <div className=\"login-bg\">\n        <div className=\"login-card\">\n          <h2>Login</h2>\n          <form onSubmit={handleLogin}>\n            <input\n              placeholder=\"Username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n            <input\n              placeholder=\"Code\"\n              type=\"password\"\n              value={code}\n              onChange={(e) => setCode(e.target.value)}\n              required\n            />\n            <button type=\"submit\">Login</button>\n            {error && <p className=\"error\">{error}</p>}\n          </form>\n        </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './PredictPage.css';\n\nconst PredictPage = () => {\n  const [matches, setMatches] = useState([]);\n  const [selectedMatchId, setSelectedMatchId] = useState('');\n  const [firstInningsScore, setFirstInningsScore] = useState('');\n  const [matchWinner, setMatchWinner] = useState('');\n  const [mom, setMom] = useState('');\n  const [message, setMessage] = useState('');\n  const [teamOptions, setTeamOptions] = useState([]);\n  const [playerOptions, setPlayerOptions] = useState([]);\n\n  const userId = localStorage.getItem('user_id');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/get-matches')\n      .then(res => {\n        setMatches(res.data.matches);\n      })\n      .catch(err => {\n        console.error('Failed to load matches:', err);\n        setMatches([]);\n      });\n  }, []);\n\n  const handleMatchChange = async (e) => {\n    const matchId = e.target.value;\n    setSelectedMatchId(matchId);\n\n    const selectedMatch = matches.find(m => m.id === matchId);\n    if (!selectedMatch) return;\n\n    const { team1, team2 } = selectedMatch;\n    setTeamOptions([team1, team2]);\n\n    try {\n      const res = await axios.get('http://localhost:5000/api/players', {\n        params: { team1, team2 }\n      });\n      setPlayerOptions(res.data.players || []);\n    } catch (err) {\n      console.error('Failed to load players:', err);\n      setPlayerOptions([]);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await axios.post('http://localhost:5000/api/submit-prediction', {\n        user_id: userId,\n        match_id: selectedMatchId,\n        predicted_first_innings_score: Number(firstInningsScore),\n        predicted_match_winner: matchWinner,\n        predicted_man_of_the_match: mom,\n      });\n\n      setMessage('✅ Prediction submitted!');\n\n      setTimeout(() => {\n        navigate('/home');\n      }, 1500);\n    } catch (err) {\n      console.error(err);\n      setMessage('❌ Submission failed. Try again.');\n    }\n  };\n\n  return (\n    <div className=\"predict-bg\">\n      <div className=\"predict-card\">\n        <h2>Submit Your Prediction</h2>\n        <form onSubmit={handleSubmit}>\n          <label>Select Match:</label>\n          <select value={selectedMatchId} onChange={handleMatchChange} required>\n            <option value=\"\">--Choose a match--</option>\n            {matches.map((m) => (\n              <option key={m.id} value={m.id}>\n                {m.team1} vs {m.team2} ({new Date(m.match_date).toDateString()})\n              </option>\n            ))}\n          </select>\n\n          <label>First Innings Score:</label>\n          <input\n            type=\"number\"\n            value={firstInningsScore}\n            onChange={(e) => setFirstInningsScore(e.target.value)}\n            required\n          />\n\n          <label>Match Winner:</label>\n          <select value={matchWinner} onChange={(e) => setMatchWinner(e.target.value)} required>\n            <option value=\"\">--Choose team--</option>\n            {teamOptions.map((team) => (\n              <option key={team} value={team}>{team}</option>\n            ))}\n          </select>\n\n          <label>Man of the Match:</label>\n          <select value={mom} onChange={(e) => setMom(e.target.value)} required>\n            <option value=\"\">--Choose player--</option>\n            {playerOptions.map((player) => (\n              <option key={player} value={player}>{player}</option>\n            ))}\n          </select>\n\n          <button type=\"submit\">Submit Prediction</button>\n        </form>\n\n        {message && <p className=\"message\">{message}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default PredictPage;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './LeaderboardPage.css';\n\nconst LeaderboardPage = () => {\n  const [data, setData] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/leaderboard')\n      .then(res => setData(res.data.leaderboard))\n      .catch(err => console.error('Failed to fetch leaderboard:', err));\n  }, []);\n\n  const renderTable = (label, key) => {\n    const sorted = [...data].sort((a, b) => b[key] - a[key]);\n    return (\n      <div className=\"leaderboard-section\">\n        <h3>{label}</h3>\n        <table>\n          <thead>\n            <tr>\n              <th>Player</th>\n              <th>{label}</th>\n              <th>Rank</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sorted.map((row, index) => (\n              <tr key={row.username}>\n                <td>{row.username}</td>\n                <td>{row[key]}</td>\n                <td>{index + 1}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  const addTotal = row =>\n    row.fis_points + row.mw_points + row.mom_points;\n\n  const renderOverallTable = () => {\n    const ranked = [...data]\n      .map(row => ({ ...row, total: addTotal(row) }))\n      .sort((a, b) => b.total - a.total);\n\n    return (\n      <div className=\"leaderboard-section\">\n        <h2>\n          <span role=\"img\" aria-label=\"trophy\">🏆</span> Current Standings\n        </h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Player</th>\n              <th>Total</th>\n              <th>Rank</th>\n            </tr>\n          </thead>\n          <tbody>\n            {ranked.map((row, i) => (\n              <tr key={row.username}>\n                <td>{row.username}</td>\n                <td>{row.total}</td>\n                <td>{i + 1}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"leaderboard-container\">\n      <button className=\"back-button\" onClick={() => navigate('/home')}>\n        <span role=\"img\" aria-label=\"back arrow\">⬅</span> Back to Home\n      </button>\n      {renderOverallTable()}\n      <div className=\"leaderboard-grid\">\n        {renderTable('Match Winner', 'mw_points')}\n        {renderTable('First Innings Score', 'fis_points')}\n        {renderTable('MOM', 'mom_points')}\n      </div>\n    </div>\n  );\n};\n\nexport default LeaderboardPage;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './HomePage.css';\n\nconst HomePage = () => {\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username') || 'Player';\n\n  const handleLogout = () => {\n    localStorage.clear();\n    navigate('/');\n  };\n\n  return (\n    <div className=\"home-bg\">\n      <div className=\"home-card\">\n        <h1>Welcome, {username}!</h1>\n        <p>Get started with your IPL Fantasy predictions below:</p>\n        <div className=\"home-buttons\">\n          <button onClick={() => navigate('/predict')}>\n            <span role=\"img\" aria-label=\"crystal ball\">🔮</span> Make Prediction\n          </button>\n          <button onClick={() => navigate('/leaderboard')}>\n            <span role=\"img\" aria-label=\"bar chart\">📊</span> View Leaderboard\n          </button>\n        </div>\n        <button className=\"logout-button\" onClick={handleLogout}>\n          <span role=\"img\" aria-label=\"door\">🚪</span> Logout\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst AdminResultForm = () => {\n  const [matches, setMatches] = useState([]);\n  const [selectedMatchId, setSelectedMatchId] = useState('');\n  const [score, setScore] = useState('');\n  const [winner, setWinner] = useState('');\n  const [mom, setMom] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/get-matches')\n      .then(res => setMatches(res.data.matches))\n      .catch(err => console.error(err));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/update-results', {\n        schedule_id: selectedMatchId,\n        actual_first_innings_score: Number(score),\n        actual_match_winner: winner,\n        actual_mom: mom\n      });\n      setMessage('Match result saved!');\n    } catch (err) {\n      setMessage('Failed to save result.');\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h2>Update Match Result</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Match:</label>\n          <select value={selectedMatchId} onChange={e => setSelectedMatchId(e.target.value)} required>\n            <option value=\"\">--Select--</option>\n            {matches.map((m) => (\n              <option key={m.id} value={m.id}>\n                {m.team1} vs {m.team2} ({new Date(m.match_date).toDateString()})\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <label>Actual First Innings Score:</label>\n          <input type=\"number\" value={score} onChange={e => setScore(e.target.value)} required />\n        </div>\n        <div>\n          <label>Match Winner:</label>\n          <input type=\"text\" value={winner} onChange={e => setWinner(e.target.value)} required />\n        </div>\n        <div>\n          <label>Man of the Match:</label>\n          <input type=\"text\" value={mom} onChange={e => setMom(e.target.value)} required />\n        </div>\n        <button type=\"submit\">Save Result</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AdminResultForm;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport PredictPage from './pages/PredictPage';\nimport LeaderboardPage from './pages/LeaderboardPage';\nimport HomePage from './pages/HomePage';\nimport AdminResultForm from './pages/AdminResultForm';\n\n\nconst AppRoutes = () => {\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    navigate('/predict');\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<LoginPage onLogin={handleLogin} />} />\n      <Route path=\"/home\" element={<HomePage />} />\n      <Route path=\"/predict\" element={<PredictPage />} />\n      <Route path=\"/leaderboard\" element={<LeaderboardPage />} />\n      <Route path=\"/admin/results\" element={<AdminResultForm />} />\n    </Routes>\n  );\n};\n\nconst App = () => (\n  <Router>\n    <AppRoutes />\n  </Router>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}